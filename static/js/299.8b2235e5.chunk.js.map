{"version":3,"file":"static/js/299.8b2235e5.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://goit-react-hw-08-phonebook/./src/components/AppBar/AppBar.module.css?5623","components/AppBar/AppBar.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Title/Title.module.css?a947","components/Title/Title.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/MainPage/MainPage.module.css?04b3","pages/MainPage/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"UserMenu_submit__+9gUU\",\"text\":\"UserMenu_text__BE4m4\",\"userMenu\":\"UserMenu_userMenu__Stk7D\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './UserMenu.module.css';\nimport { selectToken, selectUser } from 'redux/user/userSlice';\nimport { logoutUser } from 'redux/utils/createUser';\n\nfunction UserMenu() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n\n  function handleLogout() {\n    dispatch(logoutUser(token));\n  }\n\n  return (\n    <>\n      <div className={css.userMenu}>\n        <p className={css.text}>Welcome, {user.name}!</p>\n        <button className={css.submit} onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default UserMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"AppBar_header__6MZ3-\",\"buttons\":\"AppBar_buttons__+tRun\",\"button\":\"AppBar_button__a8z3n\"};","import UserMenu from 'components/UserMenu/UserMenu';\nimport css from './AppBar.module.css';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from 'redux/user/userSlice';\n\nfunction AppBar() {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  return (\n    <div className={css.header}>\n      <h1 className={css.logo}>Contact Book</h1>\n      <div className={css.buttons}>\n        {isLoggedIn ? (\n          <UserMenu />\n        ) : (\n          <>\n            <Link className={css.button} to={'/signup'}>\n              Sign Up\n            </Link>\n            <Link className={css.button} to={'/login'}>\n              Log In\n            </Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AppBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"inputContainer\":\"ContactForm_inputContainer__X4-A5\",\"error\":\"ContactForm_error__C1smZ\",\"submit\":\"ContactForm_submit__eYq7N\"};","import { Field, Form, Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSlice';\nimport { addContact } from 'redux/utils/getContacts';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const Error = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <p className={css.error}>{message}</p>}\n      />\n    );\n  };\n\n  const schema = yup.object().shape({\n    name: yup\n      .string()\n      .required()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      ),\n    number: yup\n      .string()\n      .required()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      ),\n  });\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  function handleSubmit(values, options) {\n    const isInList = contacts.find(contact => contact.name === values.name);\n    if (isInList) {\n      alert(`${values.name} is already in the list of contacts!`);\n    } else {\n      dispatch(\n        addContact({\n          name: values.name,\n          id: nanoid(),\n          number: values.number,\n        })\n      );\n    }\n    options.resetForm();\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <div className={css.inputContainer}>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            key={nanoid()}\n            className={css.input}\n            id=\"name\"\n            placeholder=\" \"\n          />\n          <label className={css.label} htmlFor=\"name\">\n            Name\n          </label>\n          <Error name=\"name\" />\n        </div>\n        <div className={css.inputContainer}>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            key={nanoid()}\n            className={css.input}\n            id=\"number\"\n            placeholder=\" \"\n          />\n          <label className={css.label} htmlFor=\"number\">\n            Number\n          </label>\n          <Error name=\"number\" />\n        </div>\n        <button type=\"submit\" className={css.submit}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"Contact_listItem__YRNe7\"};","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/utils/getContacts';\nimport css from './Contact.module.css';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li key={nanoid()} className={css.listItem}>\n      <p>{contact.name}:</p>\n      <p>{contact.number}</p>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(contact))}>\n        Delete\n      </button>\n    </li>\n  );\n};\nexport default Contact;\n\nContact.propTypes = {\n  contact: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import Contact from '../Contact';\nimport { nanoid } from 'nanoid';\nimport css from './ContactList.module.css';\nimport {\n  selectContacts,\n} from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/filter/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/utils/getContacts';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filtered = contacts.filter(el =>\n    el.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <ul className={css.list}>\n        {filtered.map(contact => (\n          <Contact contact={contact} key={nanoid()} />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ContactList;\n","import { nanoid } from 'nanoid';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter, setFilter } from 'redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div className={css.inputContainer}>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        id={nanoid()}\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n        className={css.input}\n        placeholder=\" \"\n      />\n      <label className={css.label}>Search:</label>\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__mrNq5\"};","import css from './Title.module.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text }) => <h1 className={css.title}>{text}</h1>;\n\nTitle.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Title;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MainPage_text__eh1lt\"};","import AppBar from 'components/AppBar/AppBar';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport Title from 'components/Title';\nimport { useSelector } from 'react-redux';\nimport { CircleLoader } from 'react-spinners';\nimport { selectIsLoading } from 'redux/contacts/contactsSlice';\nimport { selectIsLoggedIn } from 'redux/user/userSlice';\nimport css from './MainPage.module.css';\nimport { useNavigate } from 'react-router';\nimport { useEffect } from 'react';\n\nconst override = {\n  position: 'absolute',\n  top: '42%',\n  left: '45%',\n  display: 'block',\n};\n\nfunction MainPage() {\n  const loading = useSelector(selectIsLoading);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoggedIn, navigate]);\n\n  return (\n    <>\n      <AppBar />\n      {isLoggedIn ? (\n        <>\n          <Title text=\"Phonebook\" />\n          <ContactForm />\n          <Filter />\n          <Title text=\"Contacts\" />\n          <ContactList />\n          <CircleLoader\n            cssOverride={override}\n            color={'black'}\n            loading={loading}\n            size={150}\n            aria-label=\"Loading Spinner\"\n            data-testid=\"loader\"\n          />\n        </>\n      ) : (\n        <h2 className={css.text}>Please authorize to proceed</h2>\n      )}\n    </>\n  );\n}\n\nexport default MainPage;\n"],"names":["user","useSelector","selectUser","dispatch","useDispatch","token","selectToken","className","css","name","onClick","logoutUser","isLoggedIn","selectIsLoggedIn","to","contacts","selectContacts","Error","render","message","schema","yup","shape","required","matches","number","initialValues","validationSchema","onSubmit","values","options","find","contact","alert","addContact","id","nanoid","resetForm","type","placeholder","htmlFor","deleteContact","filter","selectFilter","useEffect","fetchContacts","filtered","el","toLowerCase","includes","map","value","onChange","e","setFilter","target","text","override","position","top","left","display","loading","selectIsLoading","navigate","useNavigate","CircleLoader","cssOverride","color","size"],"sourceRoot":""}